{"ast":null,"code":"var _jsxFileName = \"/home/tanmay/Desktop/ChatStriveB/chatfrontend/src/chat/chat.js\",\n    _s = $RefreshSig$();\n\nimport \"./chat.scss\";\nimport { to_Decrypt, to_Encrypt } from \"../aes.js\";\nimport { process } from \"../store/action/index\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\"; //gets the data from the action object and reducers defined earlier\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat({\n  username,\n  roomname,\n  socket\n}) {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const dispatch = useDispatch();\n\n  const dispatchProcess = (encrypt, msg, cipher) => {\n    dispatch(process(encrypt, msg, cipher));\n  };\n\n  useEffect(() => {\n    socket.on(\"message\", data => {\n      //decypt the message\n      const ans = to_Decrypt(data.text, data.username);\n      dispatchProcess(false, ans, data.text);\n      console.log(ans);\n      let temp = messages;\n      temp.push({\n        userId: data.userId,\n        username: data.username,\n        text: ans\n      });\n      setMessages([...temp]);\n    });\n  }, [socket]);\n\n  const sendData = () => {\n    if (text !== \"\") {\n      //encrypt the message here\n      const ans = to_Encrypt(text);\n      socket.emit(\"chat\", ans);\n      setText(\"\");\n    }\n  };\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n  console.log(messages, \"mess\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-name\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [username, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"0.7rem\"\n          },\n          children: [\"in \", roomname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message\",\n      children: [messages.map(i => {\n        if (i.username === username) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: i.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: i.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message mess-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [i.text, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: i.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"enter your message\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        onKeyPress: e => {\n          if (e.key === \"Enter\") {\n            sendData();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendData,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"5mvMrzYw9NPtaL4PTZPMEMf1yOk=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/tanmay/Desktop/ChatStriveB/chatfrontend/src/chat/chat.js"],"names":["to_Decrypt","to_Encrypt","process","React","useState","useEffect","useRef","useDispatch","Chat","username","roomname","socket","text","setText","messages","setMessages","dispatch","dispatchProcess","encrypt","msg","cipher","on","data","ans","console","log","temp","push","userId","sendData","emit","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","fontSize","map","i","e","target","value","key"],"mappings":"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","sourcesContent":["import \"./chat.scss\";\nimport { to_Decrypt, to_Encrypt } from \"../aes.js\";\nimport { process } from \"../store/action/index\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\n//gets the data from the action object and reducers defined earlier\nfunction Chat({ username, roomname, socket }) {\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const dispatch = useDispatch();\n\n  const dispatchProcess = (encrypt, msg, cipher) => {\n    dispatch(process(encrypt, msg, cipher));\n  };\n\n  useEffect(() => {\n    socket.on(\"message\", (data) => {\n      //decypt the message\n      const ans = to_Decrypt(data.text, data.username);\n      dispatchProcess(false, ans, data.text);\n      console.log(ans);\n      let temp = messages;\n      temp.push({\n        userId: data.userId,\n        username: data.username,\n        text: ans,\n      });\n      setMessages([...temp]);\n    });\n  }, [socket]);\n\n  const sendData = () => {\n    if (text !== \"\") {\n      //encrypt the message here\n      const ans = to_Encrypt(text);\n      socket.emit(\"chat\", ans);\n      setText(\"\");\n    }\n  };\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  console.log(messages, \"mess\");\n\n  return (\n    <div className=\"chat\">\n      <div className=\"user-name\">\n        <h2>\n          {username} <span style={{ fontSize: \"0.7rem\" }}>in {roomname}</span>\n        </h2>\n      </div>\n      <div className=\"chat-message\">\n        {messages.map((i) => {\n          if (i.username === username) {\n            return (\n              <div className=\"message\">\n                <p>{i.text}</p>\n                <span>{i.username}</span>\n              </div>\n            );\n          } else {\n            return (\n              <div className=\"message mess-right\">\n                <p>{i.text} </p>\n                <span>{i.username}</span>\n              </div>\n            );\n          }\n        })}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className=\"send\">\n        <input\n          placeholder=\"enter your message\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              sendData();\n            }\n          }}\n        ></input>\n        <button onClick={sendData}>Send</button>\n      </div>\n    </div>\n  );\n}\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}